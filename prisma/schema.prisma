// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          UserRole  @default(CLIENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[] @relation("UserSessions")
  bookings      Booking[] @relation("UserBookings")
  projects      Project[] @relation("UserProjects")
  equipment     Equipment[] @relation("UserEquipment")
}

enum UserRole {
  ADMIN
  ENGINEER
  CLIENT
}

model Session {
  id          String    @id @default(cuid())
  title       String
  description String?
  startTime   DateTime
  endTime     DateTime
  status      SessionStatus @default(SCHEDULED)
  price       Float
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation("UserSessions", fields: [userId], references: [id])
  userId      String
  booking     Booking?  @relation(fields: [bookingId], references: [id])
  bookingId   String?
  project     Project   @relation(fields: [projectId], references: [id])
  projectId   String
  equipment   Equipment[] @relation("SessionEquipment")
}

enum SessionStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model Booking {
  id          String    @id @default(cuid())
  startTime   DateTime
  endTime     DateTime
  status      BookingStatus @default(PENDING)
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation("UserBookings", fields: [userId], references: [id])
  userId      String
  sessions    Session[]
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model Project {
  id          String    @id @default(cuid())
  name        String
  description String?
  status      ProjectStatus @default(IN_PROGRESS)
  startDate   DateTime
  endDate     DateTime?
  budget      Float?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation("UserProjects", fields: [userId], references: [id])
  userId      String
  sessions    Session[]
  files       File[]
}

enum ProjectStatus {
  PLANNING
  IN_PROGRESS
  ON_HOLD
  COMPLETED
  ARCHIVED
}

model Equipment {
  id          String    @id @default(cuid())
  name        String
  type        String
  description String?
  status      EquipmentStatus @default(AVAILABLE)
  condition   String?
  purchaseDate DateTime?
  lastMaintenance DateTime?
  nextMaintenance DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation("UserEquipment", fields: [userId], references: [id])
  userId      String
  sessions    Session[] @relation("SessionEquipment")
}

enum EquipmentStatus {
  AVAILABLE
  IN_USE
  MAINTENANCE
  OUT_OF_ORDER
}

model File {
  id          String    @id @default(cuid())
  name        String
  type        String
  size        Int
  url         String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  project     Project   @relation(fields: [projectId], references: [id])
  projectId   String
}
